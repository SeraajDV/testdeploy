{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/navane/Desktop/Lev3T10/my-dev-porti/components/MyLayout.js\";\n\n/* In our app, we'll use a common style across various pages. For this purpose, we can create a common \r\nLayout component and use it for each of our pages. Here's an example: \r\n\r\nSince Next.js is used to create server-rendered pages, adding a link using a normal <a> tag would \r\ncause a link that would be navigated to via the server. \r\nThis is obviously not always necessary. \r\nTo support client-side navigation (this takes place in the browser, without making a request \r\nto the server) we use Next.js’ Link API.*/\nimport Link from \"next/link\";\n/*You can use this built-in component to append elements to the <head> element of the page. \r\nMore info here: https://github.com/zeit/next.js/#populating-head \r\nNotice that we add the link for the stylesheet for using React-Bootstrap components to the <Head>. */\n\nimport Head from \"next/head\";\nimport Header from \"./Header\";\nconst layoutStyle = {\n  margin: 20,\n  padding: 20,\n  border: \"1px solid #DDD\"\n};\n/* Notice in the example below that we pass children and title as props to the Layout components.\r\nIf you remove {children}, the Layout cannot render the content we put inside the Layout element. \r\nHave a look at ./pages/index.js to see where we pass props through to this Layout Component. */\n\nconst Layout = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(Head, {\n    children: /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: layoutStyle,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\nexport default Layout;","map":{"version":3,"sources":["/home/navane/Desktop/Lev3T10/my-dev-porti/components/MyLayout.js"],"names":["Link","Head","Header","layoutStyle","margin","padding","border","Layout","props","children"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE,EADU;AAElBC,EAAAA,OAAO,EAAE,EAFS;AAGlBC,EAAAA,MAAM,EAAE;AAHU,CAApB;AAMA;AACA;AACA;;AACA,MAAMC,MAAM,GAAIC,KAAD,iBACb;AAAA,0BACE,QAAC,IAAD;AAAA,2BACE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,uEAFP;AAGE,MAAA,SAAS,EAAC,yEAHZ;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eASE;AAAK,IAAA,KAAK,EAAEL,WAAZ;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGK,KAAK,CAACC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UATF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAiBA,eAAeF,MAAf","sourcesContent":["/* In our app, we'll use a common style across various pages. For this purpose, we can create a common \r\nLayout component and use it for each of our pages. Here's an example: \r\n\r\nSince Next.js is used to create server-rendered pages, adding a link using a normal <a> tag would \r\ncause a link that would be navigated to via the server. \r\nThis is obviously not always necessary. \r\nTo support client-side navigation (this takes place in the browser, without making a request \r\nto the server) we use Next.js’ Link API.*/\r\nimport Link from \"next/link\";\r\n/*You can use this built-in component to append elements to the <head> element of the page. \r\nMore info here: https://github.com/zeit/next.js/#populating-head \r\nNotice that we add the link for the stylesheet for using React-Bootstrap components to the <Head>. */\r\nimport Head from \"next/head\";\r\nimport Header from \"./Header\";\r\n\r\nconst layoutStyle = {\r\n  margin: 20,\r\n  padding: 20,\r\n  border: \"1px solid #DDD\",\r\n};\r\n\r\n/* Notice in the example below that we pass children and title as props to the Layout components.\r\nIf you remove {children}, the Layout cannot render the content we put inside the Layout element. \r\nHave a look at ./pages/index.js to see where we pass props through to this Layout Component. */\r\nconst Layout = (props) => (\r\n  <div>\r\n    <Head>\r\n      <link\r\n        rel=\"stylesheet\"\r\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n        integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n        crossorigin=\"anonymous\"\r\n      />\r\n    </Head>\r\n    <div style={layoutStyle}>\r\n      <Header />\r\n      {props.children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Layout;\r\n"]},"metadata":{},"sourceType":"module"}